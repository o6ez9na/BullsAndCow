@startuml
'https://plantuml.com/class-diagram

class Application{
-state: IApplicationState
-Application()
-~Application()
+{static}Instance(): Application
+GetState(): IApplicationState
+SetState(state: IApplicationState)
+Run()
}
class EndGameState{
-value: string
-application: Application
+EndGameState(application: Application)
+UpdateEvents(): void
+Render: void
}
class GameState{
-game_engine: GameEngine
-application: Application
-CheckValue(): string
+on_try: Subject
+GameState(application: Application)
+Render():void
+UpdateEvents():void
}
class MainMenuState{
-application: Application
-main_menu: MainMenu
-Invoke(): void
+MainMenuState(application: Application)
+Render(): void
+UpdateEvents(): void
}
class WinGameState{
-value: string
-application: Application
+WinGameState()
+UpdateEvents(): void
+Render(): void
}
class GameEngine{
-bulls: int
-cows: int
-attempts_left: int
-contained_digit: bool
-magic_value: string
-GenerateMagicValue(): int
-WriteValueArray(): void
-CharToInt(a: char): int
+GameEngine()
+GetBulls(): int
+GetCows(): int
+GetAttemptsLeft(): int
+GetMagicValue(): string
+Process(value: string): void
+InvokeL void
}
interface IApplicationState
interface IObserver{
+Invoke(): void
}
interface IObservable{
+Add(observer: IObserver): void
+Remove(observer: IObserver): void
+Notify(): void
}
interface IRendered{
+Render(): void
}
interface IUpdatableEvents{
+UpdateEvents(): void
}
class Subject{
-observers: list
+Subject()
+Add(observer: IObserver): void
+Remove(observer: IObserver): void
+Notify(): void
}
class MainMenu{
-main_menu_ui_: MainMenuUi
-main_menu_controller_: MainMenuController
+MainMenu()
+SubscribeToEventContinue(observer: IObserver): void
+Render(): void
+UpdateEvents(): void
}
class MainMenuController{
+on_write_next: Subject
+MainMenuController()
+UpdateEvents(): void
}
class GameUi{
-name: string
+PrintFrame(message: string): void
+GameUi()
+Render(): void
}
class MainMenuUi
{
-name: string
-PrintFrame(message: string): void
+MainMenuUi()
+Render(): void
}

MainMenu <|.. IRendered
MainMenu <|.. IUpdatableEvents
MainMenu --* MainMenuUi
MainMenu --* MainMenuController
MainMenu --> IObserver
MainMenuUi <|.. IRendered
MainMenuUi <|.. IUpdatableEvents
MainMenuState <|.. IApplicationState
MainMenuState --o Application
MainMenuState --* MainMenu
MainMenuState <|.. IObserver
MainMenuController <|.. IUpdatableEvents
MainMenuController --> Subject

EndGameState <|.. IApplicationState
EndGameState --o Application
WinGameState <|.. IApplicationState
WinGameState  --o Application
GameState <|.. IApplicationState
GameState --* GameEngine
GameState --o Application
GameState --* Subject
GameState --* GameUi

GameEngine <|.. IObserver
GameUi <|.. IRendered

IApplicationState <|-- IUpdatableEvents
IApplicationState <|-- IRendered

IObservable --> IObserver
IObserver <-- Subject
Subject <|.. IObservable
IApplicationState <-- Application



@enduml